<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hugo on 后花园</title><link>https://windyboy.github.io/tags/hugo/</link><description>Recent content in hugo on 后花园</description><generator>Hugo -- gohugo.io</generator><language>cn</language><copyright>© 2016-2022 糖醋小排 版权所有.</copyright><lastBuildDate>Fri, 24 Jul 2020 13:56:31 +0800</lastBuildDate><atom:link href="https://windyboy.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Remark42 实现自建用户留言</title><link>https://windyboy.github.io/posts/tech/setup-remark42/</link><pubDate>Fri, 24 Jul 2020 13:56:31 +0800</pubDate><guid>https://windyboy.github.io/posts/tech/setup-remark42/</guid><description>&lt;h2 id="概况">概况&lt;/h2>
&lt;p>原来使用hugo自带的disqus插件实现用户留言，默认情况下感觉要读取的东西太多，于是打算找一个替代产品
最好是自建服务，装载要比disqus快&lt;/p>
&lt;h2 id="选择">选择&lt;/h2>
&lt;p>根据官方的指引&lt;a href="https://gohugo.io/content-management/comments/" title="comments">comments&lt;/a>，其实可以选择的替代品不少&lt;/p>
&lt;blockquote>
&lt;h2 id="comments-alternatives">Comments Alternatives&lt;/h2>
&lt;/blockquote>
&lt;blockquote>
&lt;p>There are a few alternatives to commenting on static sites for those who do not want to use Disqus:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://staticman.net/" title="Staticman">Staticman&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.talkyard.io/blog-comments" title="talkyard">Talkyard&lt;/a> (Open source, &amp;amp; serverless hosting)&lt;/li>
&lt;li>&lt;a href="https://intensedebate.com/" title="Intense Debate">IntenseDebate&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://graphcomment.com/" title="Graph Comment">Graph Comment&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://muut.com/" title="muut">Muut&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://posativ.org/isso/" title="isso">Isso&lt;/a> (Self-hosted, Python)&lt;/li>
&lt;li>&lt;a href="https://utteranc.es/" title="Utterances">Utterances&lt;/a> (Open source, GitHub comments widget built on GitHub issues)&lt;/li>
&lt;li>&lt;a href="https://github.com/umputun/remark42" title="remark42">Remark42&lt;/a> (Open source, Golang, Easy to run docker)&lt;/li>
&lt;li>&lt;a href="https://commento.io/" title="commento">Commento&lt;/a> (Open Source, available as a service, local install, or docker image)&lt;/li>
&lt;li>&lt;a href="https://talk.hyvor.com/" title="Hyvor Talk">Hyvor Talk&lt;/a> (Available as a service)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>有使用github isses作为载体的，但看到网上有人反映数量会爆&lt;/p>
&lt;p>Isso 倒也是自服的，但python写的，对比&lt;a href="https://github.com/umputun/remark42" title="remark42">remark42&lt;/a>还是会大一些，安装也会麻烦&lt;/p>
&lt;p>这里选择的&lt;a href="https://github.com/umputun/remark42" title="remark42">remark42&lt;/a>，考虑到本身是&lt;a href="https://golang.org/" title="golang">golang&lt;/a>编写，这样会有比较小的体积以及较好的性能&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>官方的安装指引有使用&lt;a href="https://www.docker.com/" title="docker">docker&lt;/a>和二进制安装两种方案&lt;/p>
&lt;p>因为我的服务器资源有限，其实docker都是挺重的负担，这里选择直接安装二进制文件，编写服务脚本&lt;/p>
&lt;p>从release的页面 &lt;a href="https://github.com/umputun/remark42/releases">https://github.com/umputun/remark42/releases&lt;/a> 选择一个稳定的版本，一般就是linux 64位的版本
&lt;a href="https://github.com/umputun/remark42/releases/download/v1.6.0/remark42.linux-amd64.tar.gz">https://github.com/umputun/remark42/releases/download/v1.6.0/remark42.linux-amd64.tar.gz&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code> $ wget https://github.com/umputun/remark42/releases/download/v1.6.0/remark42.linux-amd64.tar.gz
$ tar xzvf remark42.linux-amd64.tar.gz
$ sudo cp remark42.linux-amd64 /usr/local/bin/remark42
&lt;/code>&lt;/pre>&lt;p>因为是&lt;a href="https://golang.org/" title="golang">golang&lt;/a>的程序，下载包只有不到8M的体积，而且没有其他依赖，在微型服务器上安装非常舒服&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="创建用户资源">创建用户/资源&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ sudo useradd -r remark42
$ sudo mkdir -m 770 /var/www/remark42
$ sudo chown :remark42 /var/www/remark42
&lt;/code>&lt;/pre>&lt;h3 id="运行参数环境变量">运行参数（环境变量）&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ sudo mkdir /etc/remark42
$ sudo vim /etc/remark42/remark42.conf
REMARK_URL=https://myblog.address
SECRET=some_secret_key_phrase_1234
SITE=myblog
AUTH_ANON=true
EMOJI=true
&lt;/code>&lt;/pre>&lt;h3 id="systemd-服务脚本">systemd 服务脚本&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ sudo vim /etc/systemd/system/remark42.service
[Unit]
Description=remark42 comment engine
After=network.target
[Service]
User=remark42
Group=remark42
EnvironmentFile=/etc/remark42/remark42.conf
WorkingDirectory=/var/www/remark42
Restart=always
RestartSec=5
ExecStart=/usr/local/bin/remark42 server
[Install]
WantedBy=multi-user.target
$ sudo systemctl daemon-reload
$ sudo systemctl start remark42
$ sudo systemctl enable remark42
&lt;/code>&lt;/pre>&lt;h3 id="配置反向代理nginx">配置反向代理(nginx)&lt;/h3>
&lt;p>最好设置一个独立的子域名，比如 remark.my.blog&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo cat /etc/nginx/sites-available/remark42
server {
server_name remark.windy.me;
listen 443;
ssl_certificate /etc/letsencrypt/live/remark.my.blog/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/remark.my.blog/privkey.pem; # managed by Certbot
include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
location / {
proxy_redirect off;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
proxy_pass http://127.0.0.1:8080/;
}
}
&lt;/code>&lt;/pre>&lt;p>&lt;a href="https://github.com/umputun/remark42" title="remark42">remark42&lt;/a>服务启动后，在本地监听8080端口，把nginx代理到服务上&lt;/p>
&lt;h3 id="oauth用户认证服务">OAuth用户认证服务&lt;/h3>
&lt;h4 id="google">Google&lt;/h4>
&lt;ul>
&lt;li>打开 &lt;a href="https://console.developers.google.com/cloud-resource-manager">https://console.developers.google.com/cloud-resource-manager&lt;/a>&lt;/li>
&lt;li>创建应用 remark&lt;/li>
&lt;li>点击左上角下拉菜单，选择 APIs &amp;amp; Services ， 再点击 Credentials&lt;/li>
&lt;li>在 Authorized JavaScript origins -&amp;gt; URIs 中添加blog的地址和remark服务的地址&lt;/li>
&lt;li>Authorized redirect URIs -&amp;gt; URIs 中填写回掉地址 &lt;a href="https://remark.my.blog/auth/google/callback">https://remark.my.blog/auth/google/callback&lt;/a>&lt;/li>
&lt;li>根据页面信息填写配置文件 remark42.conf 中相应的配置信息AUTH_GOOGLE_CID，AUTH_GOOGLE_CSEC&lt;/li>
&lt;/ul>
&lt;h4 id="github">Github&lt;/h4>
&lt;ul>
&lt;li>打开开发者页面 &lt;a href="https://github.com/settings/developers">https://github.com/settings/developers&lt;/a>&lt;/li>
&lt;li>填写 Homepage URL &amp;ldquo;&lt;a href="https://remark.my.blog">https://remark.my.blog&lt;/a>&amp;rdquo;&lt;/li>
&lt;li>填写 Authorization callback URL &amp;ldquo;&lt;a href="https://remark.my.blog/auth/github/callback%22">https://remark.my.blog/auth/github/callback&amp;quot;&lt;/a>&lt;/li>
&lt;li>根据页面 Client ID, Client Secret 更新配置文件 remark42.conf: AUTH_GITHUB_CID， AUTH_GITHUB_CSEC&lt;/li>
&lt;/ul>
&lt;h4 id="twitter">Twitter&lt;/h4>
&lt;ul>
&lt;li>打开 &lt;a href="https://developer.twitter.com/en/apps">https://developer.twitter.com/en/apps&lt;/a>&lt;/li>
&lt;li>创建 App&lt;/li>
&lt;li>填写 Website URL &amp;ldquo;&lt;a href="https://remark.my.blog">https://remark.my.blog&lt;/a>&amp;rdquo;&lt;/li>
&lt;li>填写 Callback URL &amp;ldquo;&lt;a href="https://remark.my.blog/auth/twitter/callback%22">https://remark.my.blog/auth/twitter/callback&amp;quot;&lt;/a>&lt;/li>
&lt;li>点击 Keys and tokens 的tab, 查看 Consumer API keys： API key，API secret key&lt;/li>
&lt;li>更新配置文件 remark42.conf， 填写 AUTH_TWITTER_CID ，AUTH_TWITTER_CSEC&lt;/li>
&lt;/ul>
&lt;h3 id="配置hugo的评论模版">配置hugo的评论模版&lt;/h3>
&lt;p>打开主题中的模版文件 layouts/partials/comments.html
添加remark42配置&lt;/p>
&lt;pre tabindex="0">&lt;code>{{- if .Site.Params.remark42SiteID }}
&amp;lt;script&amp;gt;
var remark_config = {
host: {{ .Site.Params.remark42Url }},
site_id: {{ .Site.Params.remark42SiteID }},
components: [&amp;#39;embed&amp;#39;],
url: {{ .Permalink }},
locale: {{ .Site.Language.Lang }},
max_shown_comments: 10,
theme: &amp;#39;dark&amp;#39;,
};
(function(c) {
for(var i = 0; i &amp;lt; c.length; i++){
var d = document, s = d.createElement(&amp;#39;script&amp;#39;);
s.src = remark_config.host + &amp;#39;/web/&amp;#39; +c[i] +&amp;#39;.js&amp;#39;;
s.defer = true;
(d.head || d.body).appendChild(s);
}
})(remark_config.components || [&amp;#39;embed&amp;#39;]);
&amp;lt;/script&amp;gt;
&amp;lt;div id=&amp;#34;remark42&amp;#34; &amp;gt;&amp;lt;/div&amp;gt;
{{- end }}
&lt;/code>&lt;/pre>&lt;p>修改hugo配置文件config.toml&lt;/p>
&lt;pre tabindex="0">&lt;code>[params]
remark42SiteID = &amp;#34;myblog&amp;#34;
remark42Url = &amp;#34;https://remark.my.blog&amp;#34;
comments = true
&lt;/code>&lt;/pre>&lt;h3 id="配置评论管理员">配置评论管理员&lt;/h3>
&lt;p>在评论框在底部成功出现以后，使用Oauth服务登陆评论系统，登陆成功以后可以点击评论的nickname，可以看到当前用户编号
设置用户编号为评论管理员，可以设置多个管理员，用逗号分割&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo vim /etc/remark42/remark42.conf
ADMIN_SHARED_ID=github_20924f5ace2e27ff9b98801b837b8a495308d782
&lt;/code>&lt;/pre>&lt;h3 id="配置-telegram-的通知">配置 telegram 的通知&lt;/h3>
&lt;ul>
&lt;li>打开 Telegram 应用&lt;/li>
&lt;li>查询联系人 BotFather&lt;/li>
&lt;li>和 BotFather 对话，输入 /newbot 创建机器人&lt;/li>
&lt;li>根据提示信息，还需要创建一个结尾是 _bot的机器人&lt;/li>
&lt;li>根据 HTTP API的token信息填写 remark42.conf 中 NOTIFY_TELEGRAM_TOKEN&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo vim /etc/remark42/remark42.conf
NOTIFY_TYPE=telegram
NOTIFY_TELEGRAM_TOKEN=12345678:xy778Iltzsdr45tg
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用Telegram的应用，创建一个私有的Channel， 并把新创建的机器人加为Channel管理员&lt;/li>
&lt;li>使用getUpdates的api获取channel的id
&lt;ul>
&lt;li>访问API，https://api.telegram.org/botXXX:YYYY/getUpdates&lt;/li>
&lt;li>其中 XXX:YYYY 是前面生成的token 12345678:xy778Iltzsdr45tg&lt;/li>
&lt;li>如果能正确返回json，检查chat.id就是需要查询的id&lt;/li>
&lt;li>直接把id填写入NOTIFY_TELEGRAM_CHAN&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo vim /etc/remark42/remark42.conf
NOTIFY_TELEGRAM_CHAN=1055587116
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;p>全部配置完后，重启remark42的服务&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo systemctl restart remark42
&lt;/code>&lt;/pre>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>[hugo comments] &lt;a href="https://gohugo.io/content-management/comments/">https://gohugo.io/content-management/comments/&lt;/a>&lt;/li>
&lt;li>[remark42 official doc] &lt;a href="https://github.com/umputun/remark42">https://github.com/umputun/remark42&lt;/a>&lt;/li>
&lt;li>[hugo comments with remark42] &lt;a href="https://blog.lasall.dev/post/hugo-and-comments-with-remark42/">https://blog.lasall.dev/post/hugo-and-comments-with-remark42/&lt;/a>&lt;/li>
&lt;li>[get telegram channel id] &lt;a href="https://www.reddit.com/r/Telegram/comments/8hpnje/q_how_to_get_channel_id_or_channelusername/">https://www.reddit.com/r/Telegram/comments/8hpnje/q_how_to_get_channel_id_or_channelusername/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>