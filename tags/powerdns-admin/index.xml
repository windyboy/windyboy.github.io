<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>powerdns-admin on 后花园</title>
    <link>https://windyboy.github.io/tags/powerdns-admin/</link>
    <description>Recent content in powerdns-admin on 后花园</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <copyright>Copyright © 2016–2021</copyright>
    <lastBuildDate>Thu, 14 Feb 2019 10:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://windyboy.github.io/tags/powerdns-admin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用powerdns搭建自己安全的域名解析服务</title>
      <link>https://windyboy.github.io/post/2017/10/setup-powerdns-authoritative-with-dnssec/</link>
      <pubDate>Thu, 14 Feb 2019 10:00:00 +0800</pubDate>
      
      <guid>https://windyboy.github.io/post/2017/10/setup-powerdns-authoritative-with-dnssec/</guid>
      <description>&lt;h2 id=&#34;概况&#34;&gt;概况&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解析服务需要提供两个独立的IP，一主(master)一从(slave)提供解析服务&lt;/li&gt;
&lt;li&gt;两个NS服务器IP地址要注册到域名注册商的服务里，解决先有鸡还是先有蛋的问题&lt;/li&gt;
&lt;li&gt;DNSSEC的key也要注册到注册商&lt;/li&gt;
&lt;li&gt;安装 &lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin&#34; title=&#34;web&#34;&gt;powerdns-admin&lt;/a&gt; 管理域名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装软件&#34;&gt;安装软件&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;两台服务器都安装相同的软件, authoritative 和 database&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;从官方的repohttpsrepopowerdnscom安装authoritative服务软件&#34;&gt;从官方的&lt;a href=&#34;https://repo.powerdns.com/&#34;&gt;repo&lt;/a&gt;安装authoritative服务软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;创建pdns的源&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/apt/sources.list.d/pdns.list

deb [arch=amd64] http://repo.powerdns.com/debian buster-auth-master main
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;屏蔽debian自带的pdns&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/apt/preferences.d/pdns 
Package: pdns-*
Pin: origin repo.powerdns.com
Pin-Priority: 600
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;引入官方的key&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# curl https://repo.powerdns.com/CBC8B383-pub.asc | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装服务器软件&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# apt-get update
# apt-get install pdns-server pdns-backend-pgsql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;其他的系统可以到 &lt;a href=&#34;https://repo.powerdns.com/&#34;&gt;https://repo.powerdns.com/&lt;/a&gt; 参考响应的安装指引&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装数据库&#34;&gt;安装数据库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装postgresql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# apt install postgresql postgresql-client
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;初始化数据库账号&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# sudo -u postgres psql
postgres=# create user pdns with password &#39;mypdnspassword&#39;;
postgres=# create database pdns owner pdns;
postgres=# grant all privileges on database pdns to pdns;
postgres=# \q
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装powerdns的backend, 创建数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# apt install pdns-backend-pgsql
# psql -U pdns -d pdns -h 127.0.0.1 -p 5432
pdns=&amp;gt; \i /usr/share/doc/pdns-backend-pgsql/schema.pgsql.sql
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;建立主从数据的复制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在从(Slave)服务器上执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# psql -U pdns -d pdns -h 127.0.0.1 -p 5432

pdns=&amp;gt; insert into supermasters (ip, nameserver, account) values (&#39;x.x.x.x1&#39;, &#39;ns2.some.host&#39;,&#39;admin&#39;);
pdns=&amp;gt; insert into domains (name, master, type) values (&#39;some.host&#39;, &#39;x.x.x.x1&#39;, &#39;SLAVE&#39;);
pdns=&amp;gt;\q

# systemctl restart pdns
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;x.x.x.x1 是主服务器的IP地址&lt;/p&gt;
&lt;h3 id=&#34;安装-powerdns-admin&#34;&gt;安装 &lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin&#34; title=&#34;web&#34;&gt;Powerdns-Admin&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;管理界面只安装在主服务器上&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装基础设施&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# apt install -y libmysqlclient-dev libsasl2-dev libldap2-dev libssl-dev libxml2-dev libxslt1-dev libxmlsec1-dev libffi-dev pkg-config apt-transport-https virtualenv build-essential
# curl -sL https://deb.nodesource.com/setup_10.x | bash -
# apt-get install -y nodejs
# curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
# echo &amp;quot;deb https://dl.yarnpkg.com/debian/ stable main&amp;quot; | tee /etc/apt/sources.list.d/yarn.list
# apt update -y
# apt install -y yarn
# apt install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;创建数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ sudo su - postgres
$ createuser powerdnsadmin
$ createdb powerdnsadmindb
$ psql
postgres=# alter user powerdnsadmin with encrypted password &#39;powerdnsadmin&#39;;
postgres=# grant all privileges on database powerdnsadmindb to powerdnsadmin;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装软件&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# git clone https://github.com/ngoduykhanh/PowerDNS-Admin.git /opt/web/powerdns-admin
# cd /opt/web/powerdns-admin
# virtualenv -p python3 flask
# source ./flask/bin/activate
# pip install -r requirements.txt
# pip install psycopg2
# cp config_template.py config.py

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;数据库配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# vi config.py
SQLALCHEMY_DATABASE_URI = &#39;postgresql://powerdnsadmin:powerdnsadmin@127.0.0.1/powerdnsadmindb&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;运行&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# export FLASK_APP=app/__init__.py
# flask db upgrade
# yarn install --pure-lockfile
# flask assets build
# ./run.py
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装服务&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# groupadd powerdnsadmin
# useradd --system --user-group powerdnsadmin
# vim /etc/systemd/system/powerdns-admin.service

[Unit]
Description=PowerDNS-Admin
After=network.target

[Service]
Type=simple
User=powerdnsadmin
Group=powerdnsadmin
ExecStart=/opt/web/powerdns-admin/flask/bin/gunicorn --workers 2 --bind unix:/opt/web/powerdns-admin/powerdns-admin.sock app:app
WorkingDirectory=/opt/web/powerdns-admin
Restart=always

[Install]
WantedBy=multi-user.target

# systemctl daemon-reload
# systemctl start powerdns-admin
# systemctl enable powerdns-admin
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;配置反向代理&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/nginx/sites-available/pdns

server {
    server_name pdns.some.local ;
    listen 80;
      index                     index.html index.htm index.php;
  root                      /opt/web/powerdns-admin;
  access_log                /var/log/nginx/powerdns-admin.local.access.log combined;
  error_log                 /var/log/nginx/powerdns-admin.local.error.log;

  client_max_body_size              10m;
  client_body_buffer_size           128k;
  proxy_redirect                    off;
  proxy_connect_timeout             90;
  proxy_send_timeout                90;
  proxy_read_timeout                90;
  proxy_buffers                     32 4k;
  proxy_buffer_size                 8k;
  proxy_set_header                  Host $host;
  proxy_set_header                  X-Real-IP $remote_addr;
  proxy_set_header                  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_headers_hash_bucket_size    64;

  location ~ ^/static/  {
    include  /etc/nginx/mime.types;
    root /opt/web/powerdns-admin/app;

    location ~*  \.(jpg|jpeg|png|gif)$ {
      expires 365d;
    }

    location ~* ^.+.(css|js)$ {
      expires 7d;
    }
  }

  location / {
    proxy_pass            http://unix:/opt/web/powerdns-admin/powerdns-admin.sock;
    proxy_read_timeout    120;
    proxy_connect_timeout 120;
    proxy_redirect        off;
  }
}

# ln -s /etc/nginx/sites-available/pdns /etc/nginx/sites-enabled/pdns
# nginx -t
# systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;连接到PowerDNS API&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;打开网页 pdns.some.host ， 注册新用户并登陆

打开 API 设置页面，连接到主服务器
http://pdns.some.host/admin/setting/pdns

PDNS API URL: http://localhost:8081
PDNS API KEY: somekey

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;配置服务&#34;&gt;配置服务&lt;/h2&gt;
&lt;h3 id=&#34;配置环境&#34;&gt;配置环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;配置host文件，强制解析 ns1, ns2&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/hosts
x.x.x.x1   ns1.some.host
x.x.x.x2   ns2.some.host
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;两台解析服务器都使用相同配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别在两台主机验证&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# ping ns1.some.host
# ping ns2.some.host
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;master-ns1somehost&#34;&gt;Master ns1.some.host&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/powerdns/pdns.conf

config-dir=/etc/powerdns
setuid=pdns
setgid=pdns
master=yes
slave=no
allow-axfr-ips=x.x.x.x2/32
default-soa-name=ns1.some.host
dnsupdate=yes
daemon=yes
disable-axfr=no
guardian=yes
local-address=0.0.0.0
local-port=53
log-dns-details=no
log-dns-queries=no
loglevel=9
socket-dir=/var/run
version-string=powerdns
# only 4.0
webserver=yes
api=yes
api-key=somekey
include-dir=/etc/powerdns/pdns.d
launch=
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中x.x.x.x2为从服务器ns2.some.host的ip地址&lt;/p&gt;
&lt;h3 id=&#34;slave-ns2somehost&#34;&gt;Slave ns2.some.host&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# vim /etc/powerdns/pdns.conf

config-dir=/etc/powerdns
setuid=pdns
setgid=pdns
master=no
slave=yes
daemon=yes
disable-axfr=yes
guardian=yes
local-address=0.0.0.0
local-port=53
log-dns-details=no
log-dns-queries=no
loglevel=9
slave-cycle-interval=60
socket-dir=/var/run
version-string=powerdns
include-dir=/etc/powerdns/pdns.d
launch=
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用powerdns-admin界面创建域名&#34;&gt;使用&lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin&#34; title=&#34;web&#34;&gt;powerdns-admin&lt;/a&gt;界面创建域名&lt;/h3&gt;
&lt;p&gt;登录到&lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin&#34; title=&#34;web&#34;&gt;powerdns-admin&lt;/a&gt;的网页， 选择New Domain，进入新建向导的网页, 在 name 里输入域名 some.host, type 设置为 master, SOA-EDIT-API 默认 DEFAULT&lt;/p&gt;
&lt;p&gt;点击Dashboard 回到主界面, 从列表中选择刚才创建的域名 some.host&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;some.host	SOA	ns1.some.host hostmaster.some.host 2017101100 28800 7200 604800 86400
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第一条ns1.some.host为主服务器域名&lt;/p&gt;
&lt;p&gt;第二条hostmaster.some.host实际上是邮件地址，系统替换第一个&#39;.&amp;lsquo;为&amp;rsquo;@&#39;, 这里代表的地址是hostmaster@some.host，具体可以根据实际情况写自己的邮箱地址&lt;/p&gt;
&lt;p&gt;创建成功以后可以用dig命令核实一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dig some.host soa @localhost
;; ANSWER SECTION:
some.host.              3600    IN      SOA     ns1.some.host. postmaster.some.host. 2017101106 28800 7200 604800 86400
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;创建dnssec记录&#34;&gt;创建DNSSEC记录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用pdnsutil创建DNSSEC&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pdnsutil secure-zone some.host

Securing zone with default key size
Adding CSK (257) with algorithm ecdsa256
Zone some.host secured
gpgsql Connection successful. Connected to database &#39;pdns&#39; on &#39;localhost&#39;.
Adding NSEC ordering information
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;查看已经生成的key&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pdnsutil show-zone some.host

This is a Master zone
Last SOA serial number we notified: 2017101100 == 2017101100 (serial in the database)
Metadata items: None
Zone has NSEC semantics
keys:
ID = 10 (CSK), flags = 257, tag = 59581, algo = 13, bits = 256    Active ( ECDSAP256SHA256 )
CSK DNSKEY = some.host. IN DNSKEY 257 3 13 PQ29wza3majnpUQ+21oEkQjfpyN3dMnTy0StcnNX7YeuRRkOeddqPpFMDoeovZcpQGV0BxduvFn/Q2DW5WXp8w== ; ( ECDSAP256SHA256 )
DS = some.host. IN DS 59581 13 1 7908b7585027f7a262d664c7ee07ae5c5733d44e ; ( SHA1 digest )
DS = some.host. IN DS 59581 13 2 cfc9006e02d2a02448cd8cdde7fcb8e840703883b166685f37db5225ad902a88 ; ( SHA256 digest )
DS = some.host. IN DS 59581 13 3 67099daf0ecaf3e99c1c5dcce132c66dc201d27d2f1baade0fecbbbaa2c6b423 ; ( GOST R 34.11-94 digest )
DS = some.host. IN DS 59581 13 4 53062fef193fae2564f9f2441cb821ae3b55c92afac5790ae70cb8e9359313e0a4c879a09c44c9cb98ed68100cf2e938 ; ( SHA-384 digest )
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;把相关信息推送到从服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在主服务器上执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pdnsutil rectify-zone some.host
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;注册解析服务&#34;&gt;注册解析服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;注册nameserver的IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开域名注册商的网页，我这里以&lt;a href=&#34;https://www.namesilo.com&#34; title=&#34;namesilo&#34;&gt;namesilo&lt;/a&gt;为例&lt;/p&gt;
&lt;p&gt;点击domain manager, 再点击已经注册成功的域名(some.host)，进入域名管理界面&lt;/p&gt;
&lt;p&gt;在NameServers部分，点击View/Manage Registered NameServers， 进入注册域名解析服务器页面&lt;/p&gt;
&lt;p&gt;点击 REGISTER NEW NAMESERVER 按钮，分别加入ns1, ns2的IP地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注册DNSSEC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回到之前域名管理的页面， 点击DS Records (DNSSEC):后面的Update连接&lt;/p&gt;
&lt;p&gt;进入注册Key的界面， 相关信息在之前 pdnsutil show-zone some.host 的部分已经列出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DS = some.host. IN DS 59581 13 1 7908b7585027f7a262d664c7ee07ae5c5733d44e ; ( SHA1 digest )
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Digest = 7908b7585027f7a262d664c7ee07ae5c5733d44e&lt;/p&gt;
&lt;p&gt;Key Tag = 59581&lt;/p&gt;
&lt;p&gt;Digest Type = 1&lt;/p&gt;
&lt;p&gt;Algorithm = 13&lt;/p&gt;
&lt;h2 id=&#34;检验&#34;&gt;检验&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;检查域名是否已在全球生效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开网站： &lt;a href=&#34;https://dnschecker.org/&#34;&gt;https://dnschecker.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入域名 some.host , 检查各地的解析情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用dig在本地服务器检验DNSSEC&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# dig some.host +dnssec +multi @localhost

;; AUTHORITY SECTION:
some.host.              86400 IN SOA ns1.some.host. hostmaster.some.host. (
                                2017101100 ; serial
                                28800      ; refresh (8 hours)
                                7200       ; retry (2 hours)
                                604800     ; expire (1 week)
                                86400      ; minimum (1 day)
                                )
some.host.              86400 IN RRSIG SOA 13 2 86400 (
                                20171019000000 20170928000000 59581 some.host.
                                UyrOyITKMWhtf2n8lN3ZhtxaAGSMFQI9Qndd49D2/Pe5
                                wWLileK3RVPFRGlXflQfFDfQ6wb7R5+aBCls6qkmIA== )
some.host.              86400 IN NSEC some.host. SOA RRSIG NSEC DNSKEY
some.host.              86400 IN RRSIG NSEC 13 2 86400 (
                                20171019000000 20170928000000 59581 some.host.
                                4fjlTftqvjmoH0OwVf3uuC8OvvuYyyIckn+c5L0J89Np
                                kc1+LCZ5DJpQrnbsWypxr5bDXARB86pr046dbrs21A== )
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;使用在线工具检验 DNSSEC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开网页 &lt;a href=&#34;https://dnssec-debugger.verisignlabs.com&#34;&gt;https://dnssec-debugger.verisignlabs.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入域名 some.host&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[How To Install and Configure PowerDNS with a MariaDB Backend on Ubuntu 14.04] (&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-powerdns-with-a-mariadb-backend-on-ubuntu-14-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-powerdns-with-a-mariadb-backend-on-ubuntu-14-04&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin/wiki/Running-PowerDNS-Admin-on-Ubuntu-16.04---Ubuntu-18.04&#34;&gt;Running PowerDNS Admin on Ubuntu 16.04 Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ngoduykhanh/PowerDNS-Admin/wiki/Using-PowerDNS-Admin-with-PostgreSQL&#34;&gt;Using PowerDNS Admin with PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方安装文档 &lt;a href=&#34;https://doc.powerdns.com/authoritative/installation.html&#34;&gt;https://doc.powerdns.com/authoritative/installation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vps-推荐&#34;&gt;VPS 推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[10g.biz] (&lt;a href=&#34;https://10g.biz/aff.php?aff=226&#34;&gt;https://10g.biz/aff.php?aff=226&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[bandwagonhost 中国优化] (&lt;a href=&#34;https://bandwagonhost.com/aff.php?aff=20451&#34;&gt;https://bandwagonhost.com/aff.php?aff=20451&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;[cubecloud] (&lt;a href=&#34;https://www.cubecloud.net/aff.php?aff=963&#34;&gt;https://www.cubecloud.net/aff.php?aff=963&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>