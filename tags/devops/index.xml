<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on 后花园</title><link>https://windyboy.github.io/tags/devops/</link><description>Recent content in devops on 后花园</description><generator>Hugo -- gohugo.io</generator><language>cn</language><copyright>© 2016-2022 糖醋小排 版权所有.</copyright><lastBuildDate>Fri, 28 Aug 2020 12:39:12 +0800</lastBuildDate><atom:link href="https://windyboy.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Drone CI 解决自签名证书的信任问题</title><link>https://windyboy.github.io/posts/tech/drone-ci-x509-issue/</link><pubDate>Fri, 28 Aug 2020 12:39:12 +0800</pubDate><guid>https://windyboy.github.io/posts/tech/drone-ci-x509-issue/</guid><description>&lt;h2 id="概述">概述&lt;/h2>
&lt;p>自建的系统如果没有使用公网资源，多数都是采用自签名的方式发放证书。最大的问题几乎就是自签名的信任问题，几乎成了自建工作环境最大的痛。大家都以为把主机的证书挂载到runner上就可以解决问题，&lt;strong>然而并不行&lt;/strong>&lt;/p>
&lt;h2 id="问题">问题&lt;/h2>
&lt;ol>
&lt;li>clone 的过程中，证书不信任&lt;/li>
&lt;li>push docker 镜像， release 发布证书不信任&lt;/li>
&lt;/ol>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;h3 id="clone">clone&lt;/h3>
&lt;p>如果不是把clone作为一个step，可以直接使用skip_verify: true忽略验证&lt;/p>
&lt;pre tabindex="0">&lt;code>clone:
tags: true
skip_verify: true
&lt;/code>&lt;/pre>&lt;p>当然也可以使用下面挂载主机证书的方法&lt;/p>
&lt;h3 id="证书不信任">证书不信任&lt;/h3>
&lt;ol>
&lt;li>首先把登陆drone的用户设置成admin&lt;/li>
&lt;/ol>
&lt;p>在drone server启动的环境变量中设置&lt;/p>
&lt;pre tabindex="0">&lt;code>DRONE_USER_CREATE=username:yourgitloginname,admin:true
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>把项目设置为信任项目&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://windyboy.github.io/images/trust.png" alt="trust project">&lt;/p>
&lt;ol start="3">
&lt;li>把主机的证书目录挂载到执行环境中&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>- name: release-publish
image: plugins/docker
volumes:
- name: certs
path: /etc/ssl/certs
volumes:
- name: certs
host:
path: /etc/ssl/certs
&lt;/code>&lt;/pre></description></item></channel></rss>