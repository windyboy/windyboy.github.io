<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>proxy on 后花园</title><link>https://windyboy.github.io/tags/proxy/</link><description>Recent content in proxy on 后花园</description><generator>Hugo -- gohugo.io</generator><language>cn</language><copyright>© 2016-2022 糖醋小排 版权所有.</copyright><lastBuildDate>Fri, 17 Jul 2020 15:13:14 +0800</lastBuildDate><atom:link href="https://windyboy.github.io/tags/proxy/index.xml" rel="self" type="application/rss+xml"/><item><title>nghttpx搭配squid科学浏览（更新debian）</title><link>https://windyboy.github.io/posts/tech/proxy-with-nghttpx-squid/</link><pubDate>Fri, 17 Jul 2020 15:13:14 +0800</pubDate><guid>https://windyboy.github.io/posts/tech/proxy-with-nghttpx-squid/</guid><description>&lt;h2 id="概况">概况&lt;/h2>
&lt;p>使用通用的https代理访问互联网&lt;/p>
&lt;p>受限制网络 ==&amp;gt; http proxy ==&amp;gt; nghttpx server ==&amp;gt; squid ==&amp;gt; 互联网&lt;/p>
&lt;ul>
&lt;li>
&lt;p>服务器&lt;/p>
&lt;p>服务器上部署代理工具 &lt;a href="https://nghttp2.org" title="nghttp2">nghttp2&lt;/a>（nghttpx server） ，缓存服务&lt;a href="http://www.squid-cache.org" title="squid">squid&lt;/a>
安装&lt;a href="https://letsencrypt.org" title="letsencrypt">letsencrypt&lt;/a>证书&lt;/p>
&lt;/li>
&lt;li>
&lt;p>客户端&lt;/p>
&lt;p>客户端可以不安装特别软件，直接设置proxy就可以，在服务端如果开启客户端认证，需要在客户端安装客户证书&lt;/p>
&lt;p>https proxy client ==&amp;gt; https 服务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主要工具&lt;/p>
&lt;ul>
&lt;li>https proxy 服务器 &lt;a href="https://nghttp2.org" title="nghttp2">nghttp2&lt;/a>&lt;/li>
&lt;li>certbot 安装&lt;a href="https://letsencrypt.org" title="letsencrypt">letsencrypt&lt;/a>证书&lt;/li>
&lt;li>缓存服务器 &lt;a href="http://www.squid-cache.org" title="squid">squid&lt;/a>&lt;/li>
&lt;li>客户端证书生成工具 &lt;a href="https://github.com/OpenVPN/easy-rsa" title="easyrsa">easyrsa&lt;/a>&lt;/li>
&lt;li>客户端证书导入导出 &lt;a href="https://www.openssl.org" title="openssl">openssl&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="centos-7">centos 7&lt;/h3>
&lt;pre tabindex="0">&lt;code>#cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>基础软件(编译)&lt;/li>
&lt;/ul>
&lt;p>如果使用epel的源安装，首先安装epel&lt;/p>
&lt;pre tabindex="0">&lt;code># yum install epel-release
# yum install openssl git-core
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;a href="https://nghttp2.org" title="nghttp2">nghttp2&lt;/a> &lt;a href="http://www.squid-cache.org" title="squid">squid&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>使用的代理程序是nghttpx, 安装的软件包是nghttp2，nghttp2中包含nghttpx的代理服务程序&lt;/p>
&lt;pre tabindex="0">&lt;code># yum install nghttp2 squid
&lt;/code>&lt;/pre>&lt;p>nghttp2 也可以自编译源码来安装，epel安装的版本是1.7,通过编译可以安装1.9&lt;/p>
&lt;blockquote>
&lt;pre tabindex="0">&lt;code>sudo yum groupinstall &amp;#34;Development Tools&amp;#34;
sudo yum install libev libev-devel zlib zlib-devel openssl openssl-devel git
git clone https://github.com/nghttp2/nghttp2.git
cd nghttp2
autoreconf -i
automake
autoconf
./configure
make
sudo make install
&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;p>默认安装位置是 &lt;code>/usr/local/bin&lt;/code>&lt;/p>
&lt;p>&lt;em>&lt;strong>在centos 7的环境正不能使用最新版的1.11.0-DEV，需要使用1.9.x的版本。在clone项目以后需要checkout 1.9.x的版本&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;code>git checkout v1.9.x&lt;/code>&lt;/p>
&lt;p>然后再执行编译的操作,编译安装完成以后，检查一下版本&lt;/p>
&lt;p>&lt;code># /usr/local/bin/nghttpx -v&lt;/code>&lt;/p>
&lt;h3 id="debian-10-ubuntu">debian 10 （ubuntu）&lt;/h3>
&lt;pre tabindex="0">&lt;code># lsb_release -a
No LSB modules are available.
Distributor ID: Debian
Description: Debian GNU/Linux 10 (buster)
Release: 10
Codename: buster
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>sudo apt install nghttp2
sudo apt install python-certbot-apache -t buster-backports
&lt;/code>&lt;/pre>&lt;p>安装&lt;a href="https://certbot.eff.org" title="certbot">certbot&lt;/a>会附带安装一个apache的服务器，需要注意，如果有web的服务，需要禁止掉，申请证书的时候可以临时启动一个
编译（略）&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/OpenVPN/easy-rsa" title="easyrsa">easyrsa&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>克隆easyrsa源码&lt;/p>
&lt;pre tabindex="0">&lt;code># git clone https://github.com/OpenVPN/easy-rsa.git
&lt;/code>&lt;/pre>&lt;p>把easyrsa 复制到/opt/中完成安装&lt;/p>
&lt;pre tabindex="0">&lt;code># cd easy-rsa/
# cp -r easyrsa3 /opt/
&lt;/code>&lt;/pre>&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="证书">证书&lt;/h3>
&lt;ul>
&lt;li>https 证书&lt;/li>
&lt;/ul>
&lt;p>服务器端证书可以使用&lt;a href="https://letsencrypt.org" title="letsencrypt">letsencrypt&lt;/a>提供的免费证书。&lt;/p>
&lt;p>&lt;del>配置&lt;a href="https://letsencrypt.org" title="letsencrypt">letsencrypt&lt;/a>证书的时候可以使用&lt;a href="https://github.com/lukas2511/letsencrypt.sh">letsencrypt.sh&lt;/a>的脚本,可以简化配置的过程。&lt;/del>&lt;/p>
&lt;p>使用&lt;a href="https://certbot.eff.org" title="certbot">certbot&lt;/a>配置&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo certbot certonly -d your.domain
How would you like to authenticate with the ACME CA?
1: Apache Web Server plugin (apache)
2: Nginx Web Server plugin (nginx)
3: Spin up a temporary webserver (standalone)
4: Place files in webroot directory (webroot)
&lt;/code>&lt;/pre>&lt;p>申请证书的时候需要在80端口开启一个web服务，如果使用之前安装的apache可以选1，同样也可以选择nginx，如果没有web服务，也可以选3，临时启动一个服务&lt;/p>
&lt;ul>
&lt;li>客户端验证证书&lt;/li>
&lt;/ul>
&lt;p>自己做一个ca，自行签发客户端证书，使用easyrsa 配置客户端证书&lt;/p>
&lt;pre tabindex="0">&lt;code># cd /opt/easyrsa3
# mv vars.example vars
&lt;/code>&lt;/pre>&lt;p>编辑vars文件，去掉前面的注释，编辑中主要的变量&lt;/p>
&lt;pre tabindex="0">&lt;code>set_var EASYRSA_REQ_COUNTRY &amp;#34;US&amp;#34;
set_var EASYRSA_REQ_PROVINCE &amp;#34;California&amp;#34;
set_var EASYRSA_REQ_CITY &amp;#34;San Francisco&amp;#34;
set_var EASYRSA_REQ_ORG &amp;#34;Copyleft Certificate Co&amp;#34;
set_var EASYRSA_REQ_EMAIL &amp;#34;me@example.net&amp;#34;
set_var EASYRSA_REQ_OU &amp;#34;My Organizational Unit&amp;#34;
&lt;/code>&lt;/pre>&lt;p>生成客户端证书&lt;/p>
&lt;pre tabindex="0">&lt;code># ./easyrsa init-pki
# ./easyrsa build-ca nopass
# ./easyrsa gen-dh
# ./easyrsa build-client-full client-me nopass
&lt;/code>&lt;/pre>&lt;p>导出CA证书&lt;/p>
&lt;pre tabindex="0">&lt;code># openssl x509 -in pki/ca.crt -out ca.pem -outform PEM
&lt;/code>&lt;/pre>&lt;p>导出客户端证书&lt;/p>
&lt;pre tabindex="0">&lt;code># openssl pkcs12 -export -clcerts -in pki/issued/client-me.crt -inkey pki/private/client-me.key -out client-me.p12
# openssl pkcs12 -in client-me.p12 -out client-me.pem -clcerts
&lt;/code>&lt;/pre>&lt;p>客户端电脑导入ca和客户端证书&lt;/p>
&lt;p>最终生成ca.pem, client-me.pem两个证书文件，复制到客户端，并导入。
ca.pem导入为可信任的证书颁发机构，client-me.pem导入为信任证书。&lt;/p>
&lt;h3 id="代理">代理&lt;/h3>
&lt;ul>
&lt;li>创建nghttpx的配置文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo mkdir /etc/nghttpx
$ sudo touch /etc/nghttpx/nghttpx.conf
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>编辑配置文件 nghttpx.conf&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>frontend=0.0.0.0,443;tls
backend=127.0.0.1,3128;no-tls
#服务器证书
private-key-file=/etc/letsencrypt/live/[domain]/privkey.pem
certificate-file=/etc/letsencrypt/live/[domain]/fullchain.pem
#客户端验证
dh-param-file=/etc/nghttpx/dh.pem
verify-client-cacert=/etc/nghttpx/ca.pem
#代理
http2-proxy=yes
no-via=yes
no-ocsp=yes
no-host-rewrite=yes
add-x-forwarded-for=yes
strip-incoming-x-forwarded-for=yes
&lt;/code>&lt;/pre>&lt;p>其中[domain]为服务器的域名，privkey.pem, fullchain.pem是letsencrypt生成的服务器证书。dh.pem, ca.pem是客户端证书&lt;/p>
&lt;ul>
&lt;li>ngttpx服务&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo vi /etc/systemd/system/nghttpx.service
&lt;/code>&lt;/pre>&lt;p>编辑内容&lt;/p>
&lt;pre tabindex="0">&lt;code>[Unit]
Description=nghttpx
After=network.target
[Service]
Type=simple
ExecStart=/usr/local/bin/nghttpx --conf=/etc/nghttpx/nghttpx.conf
ExecReload=/bin/kill -SIGUSR1 ${MAINPID}
ExecStop=/bin/kill -SIGQUIT ${MAINPID}
[Install]
WantedBy=multi-user.target
&lt;/code>&lt;/pre>&lt;p>服务&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo systemctl daemon-reload
$ sudo systemctl start nghttpx
$ sudo systemctl enable nghttpx
&lt;/code>&lt;/pre>&lt;h3 id="缓存">缓存&lt;/h3>
&lt;p>通过yum安装的squid服务，默认配置基本上已经满足要求，需要做一点小修改&lt;/p>
&lt;ul>
&lt;li>编辑配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo vi /etc/squid/squid.conf
&lt;/code>&lt;/pre>&lt;p>在配置文件尾部加上&lt;/p>
&lt;pre tabindex="0">&lt;code>via off
forwarded_for delete
access_log none
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>重启服务&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ sudo systemctl restart squid
&lt;/code>&lt;/pre>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>nghttpx 官方指引 &lt;a href="https://nghttp2.org/documentation/nghttpx-howto.html">https://nghttp2.org/documentation/nghttpx-howto.html&lt;/a>&lt;/li>
&lt;li>谷歌上另外一篇参考的nghttpx+squid &lt;a href="https://wzyboy.im/post/1052.html">https://wzyboy.im/post/1052.html&lt;/a>&lt;/li>
&lt;li>nghttpx 的配置，证书，服务脚本 &lt;a href="https://blog.apar.jp/linux/2584/">https://blog.apar.jp/linux/2584/&lt;/a>&lt;/li>
&lt;li>centos 编译 nghttp2 &lt;a href="https://gist.github.com/sonots/2bdf6cd26c23ef44db71">https://gist.github.com/sonots/2bdf6cd26c23ef44db71&lt;/a>&lt;/li>
&lt;li>certbot on debian 10 &lt;a href="https://www.tecmint.com/setup-free-ssl-certificate-for-apache-on-debian-10/">https://www.tecmint.com/setup-free-ssl-certificate-for-apache-on-debian-10/&lt;/a>&lt;/li>
&lt;li>免费证书提供 &lt;a href="https://letsencrypt.org/">https://letsencrypt.org/&lt;/a>&lt;/li>
&lt;li>client 证书生成 &lt;a href="https://gist.github.com/mtigas/952344">https://gist.github.com/mtigas/952344&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="vps引用">VPS引用&lt;/h2>
&lt;ul>
&lt;li>[linode 东京] (&lt;a href="https://www.linode.com/?r=ec0967c3fb5243693ca573d68000d3a63442ac66">https://www.linode.com/?r=ec0967c3fb5243693ca573d68000d3a63442ac66&lt;/a>)&lt;/li>
&lt;li>[bandwagonhost 中国优化] (&lt;a href="https://bandwagonhost.com/aff.php?aff=20451">https://bandwagonhost.com/aff.php?aff=20451&lt;/a>)&lt;/li>
&lt;li>[cubenet] (&lt;a href="https://www.cubecloud.net/aff.php?aff=963">https://www.cubecloud.net/aff.php?aff=963&lt;/a>)&lt;/li>
&lt;/ul></description></item></channel></rss>