<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>drone on 后花园</title>
    <link>https://windyboy.github.io/tags/drone/</link>
    <description>Recent content in drone on 后花园</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <copyright>Copyright © 2016–2021</copyright>
    <lastBuildDate>Fri, 28 Aug 2020 12:39:12 +0800</lastBuildDate>
    
	<atom:link href="https://windyboy.github.io/tags/drone/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drone CI 解决自签名证书的信任问题</title>
      <link>https://windyboy.github.io/post/2020/08/drone-ci-x509-issue/</link>
      <pubDate>Fri, 28 Aug 2020 12:39:12 +0800</pubDate>
      
      <guid>https://windyboy.github.io/post/2020/08/drone-ci-x509-issue/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;自建的系统如果没有使用公网资源，多数都是采用自签名的方式发放证书。最大的问题几乎就是自签名的信任问题，几乎成了自建工作环境最大的痛。大家都以为把主机的证书挂载到runner上就可以解决问题，&lt;strong&gt;然而并不行&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;clone 的过程中，证书不信任&lt;/li&gt;
&lt;li&gt;push docker 镜像， release 发布证书不信任&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;解决方法&lt;/h2&gt;
&lt;h3 id=&#34;clone&#34;&gt;clone&lt;/h3&gt;
&lt;p&gt;如果不是把clone作为一个step，可以直接使用skip_verify: true忽略验证&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clone:
  tags: true
  skip_verify: true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然也可以使用下面挂载主机证书的方法&lt;/p&gt;
&lt;h3 id=&#34;证书不信任&#34;&gt;证书不信任&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;首先把登陆drone的用户设置成admin
在drone server启动的环境变量中设置&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;DRONE_USER_CREATE=username:yourgitloginname,admin:true
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;把项目设置为信任项目&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://windyboy.github.io/static/trust.png&#34; alt=&#34;trust project&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;把主机的证书目录挂载到执行环境中&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;- name: release-publish
    image: plugins/docker
    volumes:
      - name: certs
        path: /etc/ssl/certs

volumes:
  - name: certs
    host:
      path: /etc/ssl/certs
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>